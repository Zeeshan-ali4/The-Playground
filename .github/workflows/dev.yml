name: Dev Pipeline - Test Integration

on:
  push:
    branches:
      - Dev

permissions:
  id-token: write  # Required for OIDC token generation
  contents: read   # Allows access to the repository contents

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      resource-matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Dynamic Resource Matrix
        id: create-matrix
        run: |
          echo "Reading resources configuration"
          RESOURCES=$(jq -c '.resources[]' config/resources.json)

          # Define batch size
          BATCH_SIZE=5
          echo "Splitting resources into batches of size $BATCH_SIZE"
          MATRIX=$(echo $RESOURCES | jq -c "[.[]] | (.[0:] | split($BATCH_SIZE))")

          echo "Matrix=$MATRIX" >> $GITHUB_OUTPUT

  process-resources:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch: ${{ fromJson(needs.generate-matrix.outputs.resource-matrix) }}
      max-parallel: 3  # Limit the number of parallel jobs to avoid overloading
    environment: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud with Workload Identity Federation
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/147961138027/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-pool"
          service_account: "github-ci-cd-dev@dev-env-441417.iam.gserviceaccount.com"

      - name: Set up gcloud CLI
        run: |
          echo "Configuring gcloud CLI"
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region europe-west4
          gcloud config set compute/zone europe-west4-a

      - name: Process Resource Batch
        run: |
          echo "Processing resource batch"
          for RESOURCE in ${{ matrix.batch }}; do
            NAME=$(echo $RESOURCE | jq -r '.name')
            ZONE=$(echo $RESOURCE | jq -r '.zone')
            MACHINE_TYPE=$(echo $RESOURCE | jq -r '.machine_type')
            IMAGE_FAMILY=$(echo $RESOURCE | jq -r '.image_family')
            IMAGE_PROJECT=$(echo $RESOURCE | jq -r '.image_project')

            echo "Creating resource: $NAME"
            gcloud compute instances create $NAME \
              --zone=$ZONE \
              --machine-type=$MACHINE_TYPE \
              --image-family=$IMAGE_FAMILY \
              --image-project=$IMAGE_PROJECT
          done

  validate-resources:
    needs: process-resources
    runs-on: ubuntu-latest
    environment: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud with Workload Identity Federation
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/147961138027/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-pool"
          service_account: "github-ci-cd-dev@dev-env-441417.iam.gserviceaccount.com"

      - name: Validate Resources
        run: |
          echo "Validating created resources"
          RESOURCES=$(jq -c '.resources[]' config/resources.json)
          
          for RESOURCE in $RESOURCES; do
            NAME=$(echo $RESOURCE | jq -r '.name')
            ZONE=$(echo $RESOURCE | jq -r '.zone')
            
            echo "Validating resource: $NAME in zone: $ZONE"
            gcloud compute instances describe $NAME --zone=$ZONE || echo "Resource $NAME validation failed"
          done

  cleanup-resources:
    if: always()  # Run cleanup even if previous steps fail
    needs: [process-resources, validate-resources]
    runs-on: ubuntu-latest
    environment: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud with Workload Identity Federation
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/147961138027/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-pool"
          service_account: "github-ci-cd-dev@dev-env-441417.iam.gserviceaccount.com"

      - name: Cleanup Resources
        run: |
          echo "Cleaning up resources"
          RESOURCES=$(jq -c '.resources[]' config/resources.json)
          
          for RESOURCE in $RESOURCES; do
            NAME=$(echo $RESOURCE | jq -r '.name')
            ZONE=$(echo $RESOURCE | jq -r '.zone')
            
            echo "Deleting resource: $NAME"
            gcloud compute instances delete $NAME --zone=$ZONE --quiet
          done
